import { defineConfig } from "vite";
import react from "@vitejs/plugin-react-swc";
import viteCompression from 'vite-plugin-compression';
import htmlMinimize from '@sergeymakinen/vite-plugin-html-minimize'
import { minify_sync } from "terser";
import path from 'path'
import fs from 'fs'

// https://vitejs.dev/config/
export default defineConfig({
    server: {
        // 监听所有地址（包括局域网与公网），方便内网调试
        host: '0.0.0.0',
        cors: false,
        proxy: {
            '/api': {
                target: 'http://localhost:24124',
                changeOrigin: true,
                rewriteWsOrigin: true,
            },
        },
    },
    base: './',
    plugins: [
        react(),
        viteCompression({ algorithm: "brotliCompress", threshold: 256 }),
        viteCompression({ algorithm: "gzip", threshold: 256 }),
        {
            name: "minify loading-failed.js",
            apply: "build",
            enforce: "post",
            closeBundle() {
                const name = "dist/loading-failed.js"
                const src = fs.readFileSync(name).toString()
                const output = minify_sync(src, {
                    compress: {
                        arrows: false,
                        typeofs: false,
                    }
                })
                if (output.code) fs.writeFileSync(name, output.code)
            },
        },
        htmlMinimize({
            minifierOptions: {
                collapseWhitespace: true,
                collapseInlineTagWhitespace: true,
                html5: true,
                keepClosingSlash: false,
                minifyCSS: true,
                minifyJS: false,
                removeAttributeQuotes: true,
                removeComments: true,
                removeRedundantAttributes: true,
                removeScriptTypeAttributes: true,
                removeStyleLinkTypeAttributes: true,
                removeOptionalTags: true,
                includeAutoGeneratedTags: false,
            }
        }),
    ],
    build: {
        target: 'esnext',
        minify: 'terser',
        terserOptions: {
            format: {
                comments: false,
            },
        },
        rollupOptions: {
            input: {
                index: path.resolve("index.html"),
                login: path.resolve("login.html"),
            },
        },
        reportCompressedSize: false, // 是否使用vite自带的方式打印压缩后的大小
        modulePreload: {
            polyfill: false,
        },
        chunkSizeWarningLimit: Infinity,
        cssCodeSplit: true,
        assetsInlineLimit: 0,
    },
    esbuild: {
        legalComments: "none",
    },
    css: {
        preprocessorOptions: {
            scss: {
                api: 'modern',
            },
        },
    },
})
